name: Build MasterCombat

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      BUILD_NUMBER: ${{ github.run_number }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven

      - name: Configure Git
        run: |
          git config --global user.email "no-reply@github.com"
          git config --global user.name "OPmasterLEO"

      - name: Build with Maven
        run: mvn -B clean package -DskipTests

      - name: Get plugin version from pom.xml
        id: version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Cleanup old JARs
        run: |
          rm -f ./MasterCombat-v*-build-*.jar

      - name: Rename JAR with build number
        run: |
          VERSION=${{ steps.version.outputs.version }}
          mv target/MasterCombat-v${VERSION}.jar ./MasterCombat-v${VERSION}-build-${{ env.BUILD_NUMBER }}.jar
          echo "jar_file=MasterCombat-v${VERSION}-build-${{ env.BUILD_NUMBER }}.jar" >> $GITHUB_OUTPUT

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: MasterCombat
          path: ./MasterCombat-v${{ steps.version.outputs.version }}-build-${{ env.BUILD_NUMBER }}.jar

      - name: Generate release notes for latest
        id: release_notes
        run: |
          REPO="${GITHUB_REPOSITORY}"
          git fetch --tags

          if git rev-parse MasterCombat-latest >/dev/null 2>&1; then
            COMMITS=$(git log MasterCombat-latest..HEAD --pretty=format:"%s|%H")
          else
            COMMITS=$(git log -n 20 --pretty=format:"%s|%H")
          fi

          FEATURES=""
          FIXES=""
          UPDATES=""

          while IFS="|" read -r MSG HASH; do
            SHORT_HASH=${HASH:0:7}
            LINK='[`'"$SHORT_HASH"'`](https://github.com/'"$REPO"'/commit/'"$HASH"')'

            if echo "$MSG" | grep -Eiq "fix"; then
              FIXES+="$LINK $MSG\n"
            elif echo "$MSG" | grep -Eiq "add|new"; then
              FEATURES+="$LINK $MSG\n"
            else
              UPDATES+="$LINK $MSG\n"
            fi
          done <<< "$COMMITS"

          NOTES="MasterCombat v${{ steps.version.outputs.version }}-build-${{ env.BUILD_NUMBER }}\n\n"
          [ -n "$FEATURES" ] && NOTES+="🎯 New Features:\n$FEATURES\n"
          [ -n "$FIXES" ] && NOTES+="🐞 Fixes:\n$FIXES\n"
          [ -n "$UPDATES" ] && NOTES+="⚙️ Updates:\n$UPDATES\n"

          echo -e "$NOTES" > release_notes.md
          cat release_notes.md

      - name: Release/Update MasterCombat-latest
        uses: softprops/action-gh-release@v2
        with:
          name: "MasterCombat latest"
          tag_name: "MasterCombat-latest"
          files: ./MasterCombat-v${{ steps.version.outputs.version }}-build-${{ env.BUILD_NUMBER }}.jar
          body_path: ./release_notes.md
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: false
