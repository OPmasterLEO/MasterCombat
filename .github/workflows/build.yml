name: Build MasterCombat Auto Release

on:
  push:
    branches: [ "master" ]
    paths:
      - "src/**"
      - "pom.xml"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      RELEASE_TAG: MasterCombat-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven

      - name: Configure Git
        run: |
          git config --global user.email "no-reply@github.com"
          git config --global user.name "OPmasterLEO"

      - name: Build with Maven
        run: mvn -B clean package -DskipTests

      - name: Get plugin version from pom.xml
        id: version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Determine release version
        id: release_version
        run: |
          ARTIFACT_VERSION=${{ steps.version.outputs.version }}
          git fetch --tags
          
          # Get last artifact version from latest release
          if gh release view ${RELEASE_TAG} --repo $GITHUB_REPOSITORY >/dev/null 2>&1; then
            LAST_VERSION=$(gh release view ${RELEASE_TAG} --repo $GITHUB_REPOSITORY --json assets -q ".assets[0].name" | grep -oP '\d+\.\d+\.\d+')
          else
            LAST_VERSION=""
          fi

          # Increment patch if same as pom.xml
          if [ "$LAST_VERSION" = "$ARTIFACT_VERSION" ]; then
            IFS='.' read -r MAJOR MINOR PATCH <<< "$ARTIFACT_VERSION"
            PATCH=$((PATCH + 1))
            ARTIFACT_VERSION="$MAJOR.$MINOR.$PATCH"
          fi

          echo "release_version=$ARTIFACT_VERSION" >> $GITHUB_OUTPUT
          echo "Release version: $ARTIFACT_VERSION"

      - name: Generate release notes
        id: release_notes
        run: |
          REPO="${GITHUB_REPOSITORY}"
          git fetch --tags

          # Only include commits that touch src/ or pom.xml since last release
          COMMITS=$(git log ${RELEASE_TAG}..HEAD --pretty=format:"%s|%H" -- src/ pom.xml)

          NOTES="MasterCombat v${{ steps.release_version.outputs.release_version }}\n\n"
          while IFS="|" read -r MSG HASH; do
            SHORT_HASH=${HASH:0:7}
            LINK='[`'"$SHORT_HASH"'`](https://github.com/'"$REPO"'/commit/'"$HASH"')'
            NOTES+="$LINK $MSG\n"
          done <<< "$COMMITS"

          echo -e "$NOTES" > release_notes.md
          cat release_notes.md

      - name: Upload artifact to latest release
        uses: actions/upload-artifact@v4
        with:
          name: MasterCombat
          path: target/MasterCombat-v${{ steps.release_version.outputs.release_version }}.jar

      - name: Update latest release
        uses: softprops/action-gh-release@v2
        with:
          name: "MasterCombat latest"
          tag_name: "${RELEASE_TAG}"
          files: target/MasterCombat-v${{ steps.release_version.outputs.release_version }}.jar
          body_path: ./release_notes.md
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: false
