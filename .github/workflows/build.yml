name: Build MasterCombat Auto Release

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven

      - name: Configure Git
        run: |
          git config --global user.email "no-reply@github.com"
          git config --global user.name "OPmasterLEO"

      - name: Build with Maven
        run: mvn -B clean package -DskipTests

      - name: Get plugin version from pom.xml
        id: version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Determine next version
        id: next_version
        run: |
          git fetch --tags
          # Find the latest MasterCombat artifact tag
          LATEST_TAG=$(git tag -l "MasterCombat-v*" --sort=-creatordate | head -n 1)
          if [ -z "$LATEST_TAG" ]; then
            NEXT_VERSION=${{ steps.version.outputs.version }}
          else
            # Extract numeric parts and increment last component
            BASE=${LATEST_TAG%-*}  # e.g., MasterCombat-v5.2
            LAST_NUM=${LATEST_TAG##*.}  # e.g., 3
            NEXT_NUM=$((LAST_NUM + 1))
            NEXT_VERSION="${BASE}.${NEXT_NUM}"
          fi
          echo "next_version=$NEXT_VERSION" >> $GITHUB_OUTPUT
          echo "Next version: $NEXT_VERSION"

      - name: Rename JAR with next version
        run: |
          NEXT_VER=${{ steps.next_version.outputs.next_version }}
          mv target/MasterCombat-v${{ steps.version.outputs.version }}.jar target/MasterCombat-v${NEXT_VER}.jar
          echo "artifact_file=target/MasterCombat-v${NEXT_VER}.jar" >> $GITHUB_OUTPUT

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: MasterCombat
          path: target/MasterCombat-v${{ steps.next_version.outputs.next_version }}.jar

      - name: Generate release notes
        id: release_notes
        run: |
          REPO="${GITHUB_REPOSITORY}"
          git fetch --tags

          # Commits since last version
          LATEST_TAG=$(git tag -l "MasterCombat-v*" --sort=-creatordate | head -n 1)
          if [ -n "$LATEST_TAG" ]; then
            COMMITS=$(git log $LATEST_TAG..HEAD --pretty=format:"%s|%H")
          else
            COMMITS=$(git log -n 20 --pretty=format:"%s|%H")
          fi

          NOTES="MasterCombat v${{ steps.next_version.outputs.next_version }}\n\n"
          while IFS="|" read -r MSG HASH; do
            SHORT_HASH=${HASH:0:7}
            LINK='[`'"$SHORT_HASH"'`](https://github.com/'"$REPO"'/commit/'"$HASH"')'
            NOTES+="$LINK $MSG\n"
          done <<< "$COMMITS"

          echo -e "$NOTES" > release_notes.md
          cat release_notes.md

      - name: Release new version
        uses: softprops/action-gh-release@v2
        with:
          name: "MasterCombat v${{ steps.next_version.outputs.next_version }}"
          tag_name: "MasterCombat-v${{ steps.next_version.outputs.next_version }}"
          files: target/MasterCombat-v${{ steps.next_version.outputs.next_version }}.jar
          body_path: ./release_notes.md
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: false

      - name: Push new tag
        run: |
          NEXT_TAG="MasterCombat-v${{ steps.next_version.outputs.next_version }}"
          git tag $NEXT_TAG
          git push origin $NEXT_TAG
